<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag security on Raymii.org</title> 
            <link>https://raymii.org/s/tags/security.xml</link> 
            <description>RSS feed for tag security on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/security.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>nginx 1.15.2, ssl_preread_protocol, multiplex HTTPS and SSH on the same port</title> 
                <link>https://raymii.org/s/tutorials/nginx_1.15.2_ssl_preread_protocol_multiplex_https_and_ssh_on_the_same_port.html</link> 
                <guid>https://raymii.org/s/tutorials/nginx_1.15.2_ssl_preread_protocol_multiplex_https_and_ssh_on_the_same_port.html</guid>
                <description>The NGINX blog recently had a nice article on a new feature of NGINX 1.15.2, $ssl_preread_protocol. This allows you to multiplex HTTPS and other SSL protocols on the same port, or as their blog states, 'to distinguish between SSL/TLS and other protocols when forwarding traffic using a TCP (stream) proxy'. This can be used to run SSH and HTTPS on the same port (or any other SSL protocol next to HTTPS). By running SSH and HTTPS on the same port, one can circumvent certain firewall restrictions. If the session looks like HTTPS, nginx will handle it, if it looks like something else, it will forward it to the configured other program. I used to use SSHL to get this functionality, but now it's built into the nginx webserver. This small guide will cover the installation of the latest version of nginx on Ubuntu (16.04) and configuring this multiplex feature.</description> 
                <pubDate>Mon, 06 Aug 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 12 Jan 2020 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Strong SSL Security on lighttpd</title> 
                <link>https://raymii.org/s/tutorials/Strong_SSL_Security_On_lighttpd.html</link> 
                <guid>https://raymii.org/s/tutorials/Strong_SSL_Security_On_lighttpd.html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the lighttpd webserver. We do this by updating OpenSSL to the latest version to mitigate attacks like Heartbleed, disabling SSL Compression and EXPORT ciphers to mitigate attacks like FREAK, CRIME and LogJAM, disabling SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. We also enable HSTS and HPKP. This way we have a strong and future proof ssl configuration and we get an A+ on the Qually Labs SSL Test.</description> 
                <pubDate>Sun, 14 Jun 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Strong SSL Security on nginx</title> 
                <link>https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html</link> 
                <guid>https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the nginx webserver. We do this by updating OpenSSL to the latest version to mitigate attacks like Heartbleed, disabling SSL Compression and EXPORT ciphers to mitigate attacks like FREAK, CRIME and LogJAM, disabling SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. We also enable HSTS and HPKP. This way we have a strong and future proof ssl configuration and we get an A+ on the Qually Labs SSL Test.</description> 
                <pubDate>Sun, 14 Jun 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Strong SSL Security on Apache2</title> 
                <link>https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html</link> 
                <guid>https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html</guid>
                <description>This tutorial shows you how to set up strong SSL security on the Apache2 webserver. We do this by updating OpenSSL to the latest version to mitigate attacks like Heartbleed, disabling SSL Compression and EXPORT ciphers to mitigate attacks like FREAK, CRIME and LogJAM, disabling SSLv3 and below because of vulnerabilities in the protocol and we will set up a strong ciphersuite that enables Forward Secrecy when possible. We also enable HSTS and HPKP. This way we have a strong and future proof ssl configuration and we get an A+ on the Qually Labs SSL Test.</description> 
                <pubDate>Sun, 14 Jun 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 27 Apr 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Disable motd news or (parts of) the dynamic motd on Ubuntu</title> 
                <link>https://raymii.org/s/tutorials/Disable_dynamic_motd_and_motd_news_spam_on_Ubuntu_18.04.html</link> 
                <guid>https://raymii.org/s/tutorials/Disable_dynamic_motd_and_motd_news_spam_on_Ubuntu_18.04.html</guid>
                <description>On Ubuntu 18.04 and up, when you login via SSH you are greeted with some news via motd (message of the day) that includes advertisements and messages from Canonical (via motd.ubuntu.com). This small guide shows you how to disable news, (parts of) the dynamic motd or just revert back to a plain old /etc/motd file.</description> 
                <pubDate>Mon, 18 Mar 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 19 Mar 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>My phone serves me 400+ ads and trackers per hour. Blokada, the best android adblocker, beats 'm all!</title> 
                <link>https://raymii.org/s/blog/My_phone_serves_me_400_ads_per_hour_blokada_blocks_beats_them_all.html</link> 
                <guid>https://raymii.org/s/blog/My_phone_serves_me_400_ads_per_hour_blokada_blocks_beats_them_all.html</guid>
                <description>Recently I switched to a new phone. After a few years (!) my old phone stopped receiving calls making it time for a new one. The new phone has Android, which allowed me to install a system wide adblocker, Blokada. It works by posing itself as a local VPN, filtering advertisements, trackers and all kinds of nasty things that spy on you or bring in malware. It does not require root access on Android, it's open source and best of all, it works very well. In the first three days of usage it has blocked over 5000 ads and trackers, including 400 when I was asleep.</description> 
                <pubDate>Sat, 16 Feb 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 16 Feb 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Three new NitroKeys! Nitrokey Pro 2, Storage 2 and a FIDO-U2F Nitrokey</title> 
                <link>https://raymii.org/s/tutorials/Three_New_Nitrokeys_Pro_2_Storage_2_and_Fido_u2f.html</link> 
                <guid>https://raymii.org/s/tutorials/Three_New_Nitrokeys_Pro_2_Storage_2_and_Fido_u2f.html</guid>
                <description>Last week I received several newsletters from Nitrokey. As you might know, I'm a fan of their (mostly open source) hardware security devices. Their newsletters introduced two new keys, the Nitrokey Pro 2 and the Nitrokey FIDO-U2F key. On their website I also saw the Nitrokey Storage Pro 2. This article is a summary of the newsletters and goes over the new features in the new hardware. It boils down to a new OpenPGP smartcard version (3.3, it was 2.1) in the Nitrokey Pro 2 and Storage 2. The FIDO-U2F device is an entirely new Nitrokey (with a button).</description> 
                <pubDate>Thu, 08 Nov 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 08 Nov 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Linux on Microsoft Azure? Disable this built-in root-access backdoor (wa-linux-agent)</title> 
                <link>https://raymii.org/s/blog/Linux_on_Microsoft_Azure_Disable_this_built_in_root_access_backdoor.html</link> 
                <guid>https://raymii.org/s/blog/Linux_on_Microsoft_Azure_Disable_this_built_in_root_access_backdoor.html</guid>
                <description>Are you running Linux on Microsoft Azure? Then by default anyone with access to your Azure portal can run commands as root in your VM, reset SSH keys, user passwords and SSH configuration. This article explains what the backdoor (wa-linux-agent) is, what it is meant to do, how it can be disabled and removed and what the implications are. OpenStack/QEMU also have an agent/backdoor which is covered in this article as well.</description> 
                <pubDate>Wed, 22 Aug 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 22 Aug 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Syslog configuration for remote logservers for syslog-ng and rsyslog, both client and server</title> 
                <link>https://raymii.org/s/tutorials/Syslog_config_for_remote_logservers_for_syslog-ng_and_rsyslog_client_server.html</link> 
                <guid>https://raymii.org/s/tutorials/Syslog_config_for_remote_logservers_for_syslog-ng_and_rsyslog_client_server.html</guid>
                <description> Syslog is the protocol, format (and software) linux and most networking devices use to log messages. All kinds of messages, system, authentication, login and applications. There are multiple implementations of syslog, like syslog-ng and rsyslog. Syslog has the option to log to a remote server and to act as a remote logserver (that receives logs). With a remote logging server you can archive your logs and keep them secure (when a machine gets hacked, if root is compromised the logs on the machine are no longer trustworthy). This tutorial shows how to set up a syslog server with rsyslog and syslog-ng and shows how to setup servers as a syslog client (that log to a remote server) with syslog-ng and rsyslog.</description> 
                <pubDate>Thu, 21 Jun 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 21 Jun 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Chrome 68 is depcrecating HPKP (HTTP Public Key Pinning)</title> 
                <link>https://raymii.org/s/blog/Chrome_68_is_deprecating_HPKP.html</link> 
                <guid>https://raymii.org/s/blog/Chrome_68_is_deprecating_HPKP.html</guid>
                <description>In 2014 I published an article on HPKP, http public key pinning. It allows a site operator to send a public key in an http header, forcing the browser to only connect when that header is found. It was ment to redice the risk of a compromised certificate authority (since any CA can create a certificate for any website). Quite secure, but it was often wrongly configured, forgotten until certificates expired and there were some security issues like a false pin. Late 2017 Google announced that HPKP would be removed in Chrome 68 and that version is released now, so HPKP is no longer supported. This post goes into the reasoning behind the removal, the possible replacement (Expect-CT) and how to remove HPKP from your site.</description> 
                <pubDate>Tue, 12 Jun 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 12 Jun 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>GPG noninteractive batch sign, trust and send gnupg keys</title> 
                <link>https://raymii.org/s/articles/GPG_noninteractive_batch_sign_trust_and_send_gnupg_keys.html</link> 
                <guid>https://raymii.org/s/articles/GPG_noninteractive_batch_sign_trust_and_send_gnupg_keys.html</guid>
                <description>Recently a team I consult for started using a shared password manager, pass. It uses GPG keys and presents itself as the standard unix password manager, but in essence it's nothing more than a wrapper around GPG encrypted files. We all had to generate new keys since the team is new and we were not allowed to use existing keys. Using a new, empty keyring, I generated my key and imported their keys. I wanted to trust, sign and publish all keys to a keyserver, this article shows how to do that noninteractively in batch form. Saves me doing the same thing four times, since now it's just four people, but next time it might be a hundred.</description> 
                <pubDate>Fri, 01 Jun 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 01 Jun 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Multiple passwords for one user, UIC uniqueness and the system password on OpenVMS</title> 
                <link>https://raymii.org/s/blog/Multiple_passwords_for_one_user_UIC_uniqueness_and_the_system_password_on_OpenVMS.html</link> 
                <guid>https://raymii.org/s/blog/Multiple_passwords_for_one_user_UIC_uniqueness_and_the_system_password_on_OpenVMS.html</guid>
                <description>In the book I bought about OpenVMS for the previous post on filesystems, 'Getting Started with OpenVMS by M. Duffy', I've read a few interesting things in the chapter that introduces user accounts and system login. Namely that a user can have multiple passwords, that user ID's are not unique and that there can be a system password. This article goes in to those three topics.</description> 
                <pubDate>Sun, 13 May 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 13 May 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Introducing the Yubikey Nano XL Rugged edition</title> 
                <link>https://raymii.org/s/blog/Introducing_the_Yubikey_Nano_XL_Rugged_Edition.html</link> 
                <guid>https://raymii.org/s/blog/Introducing_the_Yubikey_Nano_XL_Rugged_Edition.html</guid>
                <description>Last month my Yubikey broke. I had a second one as a backup so there were no problems for me. This second yubikey is a Nano model, that means it is about 1 cm by 1 cm, the normal yubikey is 2 cm by 5. It fits inside the USB port and is meant to be inserted in the computer all the time. Extracting it from the port is hard as well, since it is so small. I use my yubikey on different machines and don't like the idea of it being in a computer when I'm not there, so I wanted to fix this. I did not fix it by buying a regular sized yubikey, but I found a clever workaround, which I name the Yubikey nano XL Rugged. You'll understand when you see the pictures.</description> 
                <pubDate>Fri, 27 Apr 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 27 Apr 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OpenStack nova get-password, set-password and post encrypted password to metadata service</title> 
                <link>https://raymii.org/s/tutorials/OpenStack_nova_get_-_password_set_-_password_and_post_encrypted_password_to_metadata_service.html</link> 
                <guid>https://raymii.org/s/tutorials/OpenStack_nova_get_-_password_set_-_password_and_post_encrypted_password_to_metadata_service.html</guid>
                <description>When you create images for an OpenStack Cloud you want to use 'cloud' features. Fancy term for automatic resizing of your instance disk, adding an SSH key, (re)setting passwords and executing scripts on first boot to configure your instance further. OpenStack provides the metadata service for instances, which supplies information for the instance, like its public IP, SSH public key that was provided and vendor or user provided data like scripts or information. The OpenStack metadata service allows an instance to post data to an endpoint wich can be retreived with the 'nova get-password' command. It is meant to be an encrypted password (with the public SSH key) but it can be any plain text as well and it doesn't have to be the root password. In this guide I'll go over the scripts I use inside linux images to post a password to the metadata service and the 'nova' commands such as 'set-password' and 'get-password'. That includes decrypting a password with an SSH key that is password-protected (Horizon and nova don't support that) and the 'nova set-password' command, which sets the root password inside an instance when it has the 'qemu-guest-agent' installed and running.</description> 
                <pubDate>Sun, 25 Mar 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 25 Mar 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>My Yubikey broke, but I had a backup. So should you with your 2FA</title> 
                <link>https://raymii.org/s/blog/My_Yubikey_Broke_-_Important_tip_for_two_factor_BACKUP.html</link> 
                <guid>https://raymii.org/s/blog/My_Yubikey_Broke_-_Important_tip_for_two_factor_BACKUP.html</guid>
                <description>Today my trusty old first generation Yubikey didn't light up when I plugged it in. No problem for me, I had a backup key. But most people don't, so here's an important tip when you use two factor authentication like a Yubikey, Nitrokey or Google Authenticator (HOTP). TL;DR: Have a second hardware token stored away safely and backup your QR codes (print/screenshot) somewhere secure. Swap the hardware tokens often to make sure they both work with all services. Just as with regular data, make backups and test restores.</description> 
                <pubDate>Sun, 18 Mar 2018 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 18 Mar 2018 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>HTTP Strict Transport Security for Apache, NGINX and Lighttpd</title> 
                <link>https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html</link> 
                <guid>https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html</guid>
                <description>HTTP Strict Transport Security (often abbreviated as HSTS) is a security feature that lets a web site tell browsers that it should only be communicated with using HTTPS, instead of using HTTP. This tutorial will show you how to set up HSTS in Apache2, NGINX and Lighttpd.</description> 
                <pubDate>Fri, 17 Jun 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 17 Jun 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>How I got a valid SSL certificate for my ISP's main domain, xs4all.nl</title> 
                <link>https://raymii.org/s/blog/How_I_got_a_valid_SSL_certificate_for_my_ISPs_main_website.html</link> 
                <guid>https://raymii.org/s/blog/How_I_got_a_valid_SSL_certificate_for_my_ISPs_main_website.html</guid>
                <description>I got a valid SSL certificate for a domain that is not mine by creating an email alias. In this article I'll explain what happened, why that was possible and how we all can prevent this.</description> 
                <pubDate>Sat, 21 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 21 Mar 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>pfSense allow web interface access on WAN from specific IP</title> 
                <link>https://raymii.org/s/snippets/pfSense_allow_web_interface_access_on_WAN_from_specific_IP.html</link> 
                <guid>https://raymii.org/s/snippets/pfSense_allow_web_interface_access_on_WAN_from_specific_IP.html</guid>
                <description>pfSense is a fast and simple FreeBSD based firewall appliance with a nice web managent interface and the power of the pf firewall underneath. Normally the web interface is only accessible from the management LAN (or LAN by default) interface. If you for whatever reason locked yourself out or need access from a different IP via the WAN interface you can use the easyrule command line to temporarly add a rule that allows your remote IP in. This simple snippet shows you how.</description> 
                <pubDate>Wed, 31 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 31 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>HTTP Public Key Pinning Extension HPKP for Apache, NGINX and Lighttpd</title> 
                <link>https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html</link> 
                <guid>https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html</guid>
                <description>Public Key Pinning means that a certificate chain must include a whitelisted public key. It ensures only whitelisted Certificate Authorities (CA) can sign certificates for `*.example.com`, and not any CA in your browser store. This article has background theory and configuration examples for Apache, Lighttpd and NGINX.</description> 
                <pubDate>Tue, 30 Dec 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 30 Dec 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OSSEC 2.8 Server, Client, Web UI and Analogi Dashboard Installation tutorial</title> 
                <link>https://raymii.org/s/tutorials/OSSEC_2.8.0_Server_Client_and_Analogi_Dashboard_on_Ubuntu.html</link> 
                <guid>https://raymii.org/s/tutorials/OSSEC_2.8.0_Server_Client_and_Analogi_Dashboard_on_Ubuntu.html</guid>
                <description>OSSEC is an Open Source Host-based Intrusion Detection System that performs log analysis, file integrity checking, policy monitoring, rootkit detection, real-time alerting and active response. It runs on most operating systems, including Linux, MacOS, Solaris, HP-UX, AIX and Windows. It also includes agentless monitoring for use with for example Cisco or Juniper hardware. This tutorial covers the installation of the OSSEC 2.8 server, the standard OSSEC Web UI and the Analogi dashboard on Ubuntu 14.04. It also covers OSSEC setup with MySQL support. Last but not least it shows you how to install the OSSEC agent on a *NIX system.</description> 
                <pubDate>Wed, 11 Jun 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 11 Jun 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Install nmap 6.40 on Ubuntu 12.04</title> 
                <link>https://raymii.org/s/tutorials/Install_nmap_6_on_Ubuntu_12.04.html</link> 
                <guid>https://raymii.org/s/tutorials/Install_nmap_6_on_Ubuntu_12.04.html</guid>
                <description>This tutorial shows you how to install nmap 6.40 on Ubuntu 12.04. Ubuntu 12.04 has nmap 5.21 in the repositories. nmap 6 features a lot of improvements like full IPv6 support and better and faster scanning.</description> 
                <pubDate>Fri, 13 Dec 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Fri, 13 Dec 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Uninstall and Remove OSSEC</title> 
                <link>https://raymii.org/s/tutorials/Uninstall_OSSEC.html</link> 
                <guid>https://raymii.org/s/tutorials/Uninstall_OSSEC.html</guid>
                <description>This small tutorial shows you how to remove an OSSEC installation. OSSEC is installed from source (via a script), so you have to remove all the things manually instead of with your package manager.</description> 
                <pubDate>Tue, 01 Oct 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 01 Oct 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>OSSEC Server, Client, Web UI and Analogi Dashboard Installation tutorial</title> 
                <link>https://raymii.org/s/tutorials/OSSEC_and_webui_and_analogi_dashboard_installation_on_Ubuntu.html</link> 
                <guid>https://raymii.org/s/tutorials/OSSEC_and_webui_and_analogi_dashboard_installation_on_Ubuntu.html</guid>
                <description>OSSEC is an Open Source Host-based Intrusion Detection System that performs log analysis, file integrity checking, policy monitoring, rootkit detection, real-time alerting and active response. It runs on most operating systems, including Linux, MacOS, Solaris, HP-UX, AIX and Windows. It also includes agentless monitoring for use with for example Cisco or Juniper hardware. This tutorial covers the installation of the OSSEC server, the standard OSSEC Web UI and the Analogi dashboard on Ubuntu 12.04. It also covers OSSEC setup with MySQL support, including a Makefile bugfix. Last but not least it shows you how to install the OSSEC agent on a *NIX system.</description> 
                <pubDate>Sat, 07 Sep 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 07 Sep 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Setting up Motion with FTP and Email! support</title> 
                <link>https://raymii.org/s/tutorials/Setting-up-motion-with-ftp-and-email-support.html</link> 
                <guid>https://raymii.org/s/tutorials/Setting-up-motion-with-ftp-and-email-support.html</guid>
                <description>Not available.</description> 
                <pubDate>Wed, 09 Apr 2008 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 09 Apr 2008 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    