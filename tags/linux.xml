<?xml version="1.0" ?>
    <rss version="2.0"  xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
            <title>RSS feed for tag linux on Raymii.org</title> 
            <link>https://raymii.org/s/tags/linux.xml</link> 
            <description>RSS feed for tag linux on Raymii.org</description>
            <atom:link href="https://raymii.org/s/tags/linux.xml" rel="self" type="application/rss+xml" />
    
            <item>
                <title>connman operstate list</title> 
                <link>https://raymii.org/s/snippets/connman_operstate_list.html</link> 
                <guid>https://raymii.org/s/snippets/connman_operstate_list.html</guid>
                <description>Recently I was debugging connection issues with a system that uses connman as it's network management software. In the log it was visible that the connection went away and came back, logged with 'operstate' $number $state. I couldn't easily find an overview of all the possible states, but since it's open source we can take a look at the code to find out. Publishing it here for future reference.</description> 
                <pubDate>Tue, 25 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Tue, 25 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ template definitions in a .cpp file (instead of a header file)</title> 
                <link>https://raymii.org/s/snippets/Cpp_template_definitions_in_a_cpp_file_instead_of_header.html</link> 
                <guid>https://raymii.org/s/snippets/Cpp_template_definitions_in_a_cpp_file_instead_of_header.html</guid>
                <description>In this snippet I'll show you how to place your C++ template definitions in a seperate .cpp file. I'd recommend you to just put template definitions in your header file, or a .hpp file, but if you really want to there is a trick to get them in a seperate .cpp file. The trick is to explicitly instanciate every template you're going to use at the end of the .cpp file. With many different templates and types this becomes cumbersome, but for certain usecases it could be useful. </description> 
                <pubDate>Sat, 22 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 22 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ create and write to a CSV file with a variadic template</title> 
                <link>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_CSV_file_with_a_variadic_template.html</link> 
                <guid>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_CSV_file_with_a_variadic_template.html</guid>
                <description>In this snippet I'll show you a variadic template to write to a file. In line with my other experiments to get a better grasp at templates, this example improves on my earlier attempt by using a variadic template, thus allowing you to provide an infinite number of columns to the csv file of any type that has the overloaded &lt;&lt; operator.</description> 
                <pubDate>Mon, 17 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 17 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ create and write to a CSV file</title> 
                <link>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_csv_file.html</link> 
                <guid>https://raymii.org/s/snippets/Cpp_create_and_write_to_a_csv_file.html</guid>
                <description>In this quick snippet I'll show you how to create and write to a csv file. It includes checking if the file is writable, and if it's not there, creates it with a different first row as header. It's a quick example, I've used it to log some test data. It can probably be improved.</description> 
                <pubDate>Fri, 07 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sun, 16 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Cooking with C++ templates and stronger types</title> 
                <link>https://raymii.org/s/blog/Cooking_with_Cpp_templates_and_stronger_types.html</link> 
                <guid>https://raymii.org/s/blog/Cooking_with_Cpp_templates_and_stronger_types.html</guid>
                <description>To gain a better understanding of C++ templates I'm playing around with them. Most of the online guides stop at the example of a simple template to, for example, get the max of two inputs, or cover just a bit more (like how to overload operators for your specific template classes to make &lt;&lt; and + / - work). Combining templates with a stronger type to pass stuff around led me to a test kitchen. As in, some code with ingredients, amounts and an oven. One small thing kept it from working, after some feedback it turned out I was passing the wrong parameters to the template. Afterwards the error also made sense. This post covers both my learning and a small piece on stronger types.</description> 
                <pubDate>Thu, 13 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Thu, 13 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>C++ variadic template recursive example</title> 
                <link>https://raymii.org/s/snippets/Cpp_variadic_template_recursive_example.html</link> 
                <guid>https://raymii.org/s/snippets/Cpp_variadic_template_recursive_example.html</guid>
                <description>In this article I'll show you how to use a variadic template in C++. Variadic templates allow you to have a template with a variable number of arguments, also called a parameter pack. Unpacking that pack is more difficult than it should be, so we use a recursive template to iterate over all the parameters one by one. I've also included an example in Python to compare to.</description> 
                <pubDate>Sat, 08 Jun 2019 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 08 Jun 2019 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Microsoft Office 2013 and 2010 on Linux</title> 
                <link>https://raymii.org/s/tutorials/Office_2013_and_2010_on_Linux.html</link> 
                <guid>https://raymii.org/s/tutorials/Office_2013_and_2010_on_Linux.html</guid>
                <description>This guide shows you how to run Microsoft Office 2013 and 2010 on Linux using CrossOver. It guides you through the installation and gives a review on what parts of the Office suite work with Linux.</description> 
                <pubDate>Sat, 02 Jan 2016 00:00:00 GMT</pubDate>
                <lastBuildDate>Sat, 02 Jan 2016 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Build a Flexible and Powerful System with Arch Linux</title> 
                <link>https://raymii.org/s/tutorials/Build_a_Flexible_and_Powerful_System_with_Arch_Linux.html</link> 
                <guid>https://raymii.org/s/tutorials/Build_a_Flexible_and_Powerful_System_with_Arch_Linux.html</guid>
                <description>This article covers the basic installation and configuration of Arch Linux, the distro that adheres to the Keep It Simple, Stupid principle. Arch Linux is a rolling release, that means that you always have the latest and greatest software. With Arch, you're on your own. In a world where where technology is taking your personal responsibility and giving it to the cloud, or to an internet search filter or the device manufacturers, getting your hands dirty with an operating system can be a revelation. Not only will you learn a great deal about how Linux works and what holds the whole thing together, you'll get a system you understand from the inside-out, and one that can be instantly upgraded to all the latest packages. You may also learn something about yourself in the process. And despite its reputation, it's not that difficult.</description> 
                <pubDate>Mon, 09 Mar 2015 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 09 Mar 2015 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Transmission Web on a Raspberry Pi with Arch Linux</title> 
                <link>https://raymii.org/s/blog/Transmission-Raspberry-Pi-Arch-Linux.html</link> 
                <guid>https://raymii.org/s/blog/Transmission-Raspberry-Pi-Arch-Linux.html</guid>
                <description>One of my Raspberry Pi's was running a test setup of the Citadel groupware service. The test was sucessfull, so I set up a real world setup. The Raspberry Pi would serve another purpose, namely, a Linux Torrent seedbox. As in, to seed Linux torrents from linuxtracker.org. I choose Transmission for this, because it is simple, fast and stable. Transmission has a good webinterface, plus it allows access from remote clients with the transmission-remote gui packages. This article shows you how to set it up on a Raspberry Pi running Arch Linux.</description> 
                <pubDate>Mon, 28 Apr 2014 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 28 Apr 2014 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Exploring /proc/ - tips and tricks for the procfs</title> 
                <link>https://raymii.org/s/snippets/Procfs_tips_and_tricks.html</link> 
                <guid>https://raymii.org/s/snippets/Procfs_tips_and_tricks.html</guid>
                <description>This article has a lot of nice tips and trics on using the procfs linux virtual file system.</description> 
                <pubDate>Mon, 28 Jan 2013 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 28 Jan 2013 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Small low cost linux pc's, an overview from 11-2012</title> 
                <link>https://raymii.org/s/articles/Small_Linux_PCs.html</link> 
                <guid>https://raymii.org/s/articles/Small_Linux_PCs.html</guid>
                <description>This is an overview of small linux computers, mostly ARM based.</description> 
                <pubDate>Wed, 07 Nov 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Wed, 07 Nov 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
            <item>
                <title>Small Operating Systems / Linux Distributions</title> 
                <link>https://raymii.org/s/articles/Small_Linux_Distros.html</link> 
                <guid>https://raymii.org/s/articles/Small_Linux_Distros.html</guid>
                <description>This is an overview of small operating systems and Linux distributions, most of them work well on older hardware (pre-dual core era). It provides screenshots, package information, size and specs and project information on the distro.</description> 
                <pubDate>Mon, 09 Jul 2012 00:00:00 GMT</pubDate>
                <lastBuildDate>Mon, 09 Jul 2012 00:00:00 GMT</lastBuildDate>
            </item>
    
        </channel>
    </rss>
    
    